// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}
model User {
id String @id @default(uuid())
email String @unique
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

order Order[]
}

model Product {
id String @id @default(uuid())
name String
priceInCents Int
filePath String
imagePath String
description String
isAvailableForPurchase Boolean @default(true)
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

order Order[]
downloadVerification DownloadVerification[]
}

model Order {
id String @id @default(uuid())
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
priceInCents Int
userId String
productId String

user User @relation(fields: [userId], references: [id], onDelete: Cascade)
product Product @relation(fields: [productId], references:[id], onDelete: Restrict)

}

model DownloadVerification {
id String @id @default(uuid())
createdAt DateTime @default(now())
expiresAt DateTime
productId String

product Product @relation(fields: [productId], references:[id], onDelete: Cascade)
}